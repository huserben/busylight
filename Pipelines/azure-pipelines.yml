# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - 'README.md'
    - '/docs'

pr:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: BuildTestStage
  displayName: Build and Test
  jobs:
  - job: BuildTest
    displayName: Build Solution and run Unit Tests
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=false'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

- ${{if eq(variables['Build.SourceBranchName'], 'refs/heads/master')}}:
  - stage: Deploy
    displayName: Build Image and deploy to Dockerhub
    dependsOn: BuildTestStage
    jobs:  
    - job: Deploy
      displayName: Deploy
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: DockerInstaller@0
        displayName: Install Docker CLI
        inputs:
          dockerVersion: '19.03.9'

      - task: CmdLine@2
        displayName: Install Dependencies
        inputs:
          script: |
            #sudo apt-get -y install qemu-user-static

            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - task: CmdLine@2
        displayName: Login to DockerHub
        env: 
          DockerHubPassword: $(dockerpw)
        inputs:
          script: |
            docker login --username huserben --password $DockerHubPassword

      - task: CmdLine@2
        displayName: Build Multi-Platform Images
        inputs:
          script: |
            docker buildx create --use --name busylight-builder

            docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t huserben/busylight --push busylight/
